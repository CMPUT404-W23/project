# Generated by Django 3.1.6 on 2023-02-21 23:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('socialDist', '0002_remove_author_inserver'),
    ]

    operations = [
        migrations.CreateModel(
            name='InboxItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.RemoveField(
            model_name='comment',
            name='isLiked',
        ),
        migrations.RemoveField(
            model_name='inbox',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='inbox',
            name='like',
        ),
        migrations.RemoveField(
            model_name='inbox',
            name='post',
        ),
        migrations.RemoveField(
            model_name='like',
            name='likeType',
        ),
        migrations.RemoveField(
            model_name='like',
            name='parentComment',
        ),
        migrations.RemoveField(
            model_name='like',
            name='parentPost',
        ),
        migrations.RemoveField(
            model_name='post',
            name='isLiked',
        ),
        migrations.AddField(
            model_name='author',
            name='inServer',
            field=models.ForeignKey(blank='True', null=True, on_delete=django.db.models.deletion.SET_NULL, to='socialDist.server'),
        ),
        migrations.AddField(
            model_name='like',
            name='author',
            field=models.ForeignKey(default=django.utils.timezone.now, on_delete=django.db.models.deletion.CASCADE, related_name='liked', to='auth.user'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='like',
            name='dateTime',
            field=models.DateTimeField(auto_created=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='socialDist.author'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='date',
            field=models.DateField(auto_created=True),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parentPostID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='socialDist.post'),
        ),
        migrations.AlterField(
            model_name='inbox',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox', to='socialDist.author'),
        ),
        migrations.AlterField(
            model_name='post',
            name='posterID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='socialDist.author'),
        ),
        migrations.CreateModel(
            name='Likeable',
            fields=[
                ('inboxitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='socialDist.inboxitem')),
                ('isLiked', models.BooleanField(default=False)),
            ],
            bases=('socialDist.inboxitem',),
        ),
        migrations.AddField(
            model_name='like',
            name='inboxitem_ptr',
            field=models.OneToOneField(auto_created=True, default=1, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='socialDist.inboxitem'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='UserFollowing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('following_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_id', 'following_user_id')},
            },
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('inboxitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='socialDist.inboxitem')),
                ('date', models.DateTimeField(auto_created=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_requests', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recievced_requests', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('socialDist.inboxitem',),
        ),
        migrations.AddField(
            model_name='comment',
            name='likeable_ptr',
            field=models.OneToOneField(auto_created=True, default=1, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='socialDist.likeable'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='inbox',
            name='items',
            field=models.ManyToManyField(to='socialDist.Likeable'),
        ),
        migrations.AddField(
            model_name='like',
            name='targetObject',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='socialDist.likeable'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='likeable_ptr',
            field=models.OneToOneField(auto_created=True, default=1, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='socialDist.likeable'),
            preserve_default=False,
        ),
    ]
